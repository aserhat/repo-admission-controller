#!/bin/bash

kubectl apply -f namespace.yaml

mkdir certs

pushd certs

cat >server.conf <<EOF
[req]
req_extensions = v3_req
distinguished_name = req_distinguished_name
[req_distinguished_name]
[ v3_req ]
basicConstraints = CA:FALSE
keyUsage = nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage = clientAuth, serverAuth
EOF

openssl genrsa -out ca.key 2048

openssl req -x509 -new -nodes -key ca.key -days 100000 -out ca.crt -subj "/CN=repo-whitelist_admission_ca"

openssl genrsa -out server.key 2048

openssl req -new -key server.key -out server.csr -subj "/CN=repo-whitelist.repo-whitelist.svc" -config server.conf

openssl x509 -req -in server.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out server.crt -days 100000 -extensions v3_req -extfile server.conf

kubectl -n repo-whitelist create secret tls repo-whitelist --cert=server.crt --key=server.key

popd

VERSION=$(cat ../VERSION)

sed -e "s|\${VERSION}|${VERSION}|g" kube-deployment.yaml.tpl | kubectl apply -f -

cat > webhook-configuration.yaml <<EOF
kind: ValidatingWebhookConfiguration
apiVersion: admissionregistration.k8s.io/v1beta1
metadata:
  name: repo-whitelist-webhook
webhooks:
  - name: repo-whitelist.symettrical.dev
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - "v1"
        operations:
          - "CREATE"
        resources:
          - "pods"
    failurePolicy: Fail
    clientConfig:
      caBundle: $(cat ./certs/ca.crt | base64 | tr -d '\n')
      service:
        namespace: repo-whitelist
        name: repo-whitelist
EOF

kubectl apply -f webhook-configuration.yaml

rm -rf certs
